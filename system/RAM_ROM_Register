start：进程，进程有自己的地址空间。地址空间为程序创造了一种抽象的内存。地址空间是一个进程可以用于寻址内存的一套地址集合。每个进程都有一个自己的地址空间，并且这个地址空间独立于其他进程的地址空间。每个进程抽象一个4G的空间（实际上共用）

内存分虚拟内存和物理内存。

虚拟内存不实际存在，虚拟内存是给每个进程抽象出来的。可以虚拟内存重定位到物理内存中，对主存的抽象概念。将内存看为是磁盘的高速缓存，在内存中只保存活跃的区域。并根据需要在内存和磁盘中来回传送数据，使得主存的使用更加高效。
虚拟内从管理机制：页式，段式，段页式。
页式管理：页表项，多级页表，倒排页，MMU(Memory Management Unit)，快表TLB，页错误缺页异常。

多级页表：先通过低级的页表索引到二级页表，然后通过二级页表再去扫描
倒排页表：
页面置换算法：


物理内存:页式管理是将内存等分，等长划分用的是位图(bitmap)，每一个位都为0，如果内存被占用，则将位图相应地方置为1.

段式：栈段，堆段，数据段（BSS(未初始化) / DATA(已初始化)），代码段

不等长划分用的是空闲区表

内存分配算法：
首次适配算法：从头开始扫描扫到第一个可用的进行分配
下次适配算法：从上一次分配的开始扫描
最佳适配算法和最差适配算法：进行相应的排序后开始扫描

内存碎片：
内碎片，按页分配却未用。
外碎片：针对整个物理内存，不够再给其他进程分。

紧箍技术：趁进程不进行的时候进行合并，使得可用成块的空间增大

伙伴算法：将内存当作2的次幂。 2^n-1 < 需要 < 2^n， 将2^n分配给需要的进程

上相邻或者下相邻或者上下相邻，释放使用后进行合并，保证释放后所得的空间最大化

内存和磁盘建立关系由虚拟存储技术实现。


磁盘：磁盘结构，磁盘存取，磁盘调度（磁盘缓冲，磁盘预读）
