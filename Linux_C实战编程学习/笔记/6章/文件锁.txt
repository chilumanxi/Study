当有多个进程同时对某一文件进行操作的时候。就有可能发生数据的不同步，从而引起错误，该文件的最后状态取决于写该文件的最后一个程序。但是对于有些应用程序如数据库，有时进程需要确保它正在单独写一个文件。为了向进程提供这种功能，Linux系统提供了记录锁机制。
文件锁包括建议锁和强制性的锁，建议性的在对文件进行锁操作的时候，会检测是否有锁存在，并且尊重已有的锁，在一般的情况下，内核和系统都不使用建议锁。强制性的锁是由内核执行的锁，当一个文件被上锁进行写入操作的时候，内核将阻止其他进程对其进行读写操作。采取强制性的锁对性能的影响很大，每次进行读写操作都必须检查是否有锁存在。
多个进程在一个给定的字节上可以有一把共享的读锁，但是在一个给定字节上的写锁则只能由一个进程单独使用。
当设置一个共享锁的时候（即读锁），第一个参数fd所指的文件必须以可读方式打开；当设置一个互斥锁（即写锁），第一个参数fd所指的文件必须以可写的方式打开。。当设置两种锁的时候，第一个参数所指向的文件必须以可读可写的方式打开。当进程结束或者文件描述符fd被close调用时，锁会自动释放。
